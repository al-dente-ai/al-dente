{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password_hash": {
          "name": "password_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "idx_users_id": {
          "name": "idx_users_id",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_key": {
          "columns": ["email"],
          "nullsNotDistinct": false,
          "name": "users_email_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users select own": {
          "name": "Users select own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(( SELECT auth.uid() AS uid) = id)"
        },
        "Users insert own": {
          "name": "Users insert own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "Users update own": {
          "name": "Users update own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "Users delete own": {
          "name": "Users delete own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.items": {
      "name": "items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expiry": {
          "name": "expiry",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "categories": {
          "name": "categories",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_items_user_id": {
          "name": "idx_items_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "items_categories_idx": {
          "name": "items_categories_idx",
          "columns": [
            {
              "expression": "categories",
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "items_name_trgm_idx": {
          "name": "items_name_trgm_idx",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "gin_trgm_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "items_notes_trgm_idx": {
          "name": "items_notes_trgm_idx",
          "columns": [
            {
              "expression": "notes",
              "asc": true,
              "nulls": "last",
              "opclass": "gin_trgm_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "items_user_id_idx": {
          "name": "items_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "items_user_id_fkey": {
          "name": "items_user_id_fkey",
          "tableFrom": "items",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Items select own": {
          "name": "Items select own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(( SELECT auth.uid() AS uid) = user_id)"
        },
        "Items insert own": {
          "name": "Items insert own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "Items update own": {
          "name": "Items update own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "Items delete own": {
          "name": "Items delete own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.login_events": {
      "name": "login_events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "ip": {
          "name": "ip",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "success": {
          "name": "success",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_login_events_user_id": {
          "name": "idx_login_events_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "login_events_user_id_fkey": {
          "name": "login_events_user_id_fkey",
          "tableFrom": "login_events",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Login events select own": {
          "name": "Login events select own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(( SELECT auth.uid() AS uid) = user_id)"
        },
        "Login events insert own": {
          "name": "Login events insert own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "Login events update own": {
          "name": "Login events update own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "Login events delete own": {
          "name": "Login events delete own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.recipes": {
      "name": "recipes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "meal_type": {
          "name": "meal_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "servings": {
          "name": "servings",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "prep_time_minutes": {
          "name": "prep_time_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ingredients": {
          "name": "ingredients",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "steps": {
          "name": "steps",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "uses_item_ids": {
          "name": "uses_item_ids",
          "type": "uuid[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_recipes_user_id": {
          "name": "idx_recipes_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recipes_user_id_idx": {
          "name": "recipes_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "recipes_user_id_fkey": {
          "name": "recipes_user_id_fkey",
          "tableFrom": "recipes",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "recipes_meal_type_check": {
          "name": "recipes_meal_type_check",
          "value": "meal_type = ANY (ARRAY['breakfast'::text, 'lunch'::text, 'dinner'::text, 'snack'::text])"
        }
      },
      "policies": {
        "Recipes select own": {
          "name": "Recipes select own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(( SELECT auth.uid() AS uid) = user_id)"
        },
        "Recipes insert own": {
          "name": "Recipes insert own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "Recipes update own": {
          "name": "Recipes update own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "Recipes delete own": {
          "name": "Recipes delete own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.email_verification_codes": {
      "name": "email_verification_codes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuid_generate_v4()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "verified": {
          "name": "verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "email_verification_codes_active_user_idx": {
          "name": "email_verification_codes_active_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(verified = false)",
          "with": {}
        },
        "email_verification_codes_code_idx": {
          "name": "email_verification_codes_code_idx",
          "columns": [
            {
              "expression": "code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_verification_codes_expires_at_idx": {
          "name": "email_verification_codes_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_verification_codes_user_id_idx": {
          "name": "email_verification_codes_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "email_verification_codes_user_id_fkey": {
          "name": "email_verification_codes_user_id_fkey",
          "tableFrom": "email_verification_codes",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "items": {
        "columns": {
          "categories": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      },
      "recipes": {
        "columns": {
          "uses_item_ids": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "uuid"
          }
        }
      }
    }
  }
}
